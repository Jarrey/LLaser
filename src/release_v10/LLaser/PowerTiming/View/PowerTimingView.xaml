<!--
    //*********************************************************
    // LLaser project - PowerTimingView.xaml
    // Created at 2013-5-7
    // Author: Bob Bao jar.bob@gmail.com
    //
    // All rights reserved. Please follow license agreement to
    // rewrite and copy this code.
    //
    //*********************************************************
-->
<UserControl x:Class="LLaser.View.PowerTimingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:LLaser.WPF.Controls;assembly=LLaser.WPF.Controls"
             xmlns:chart="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:chartingprimitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:converter="clr-namespace:LLaser.Converter" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:l="clr-namespace:LLaser"
             xmlns:common="clr-namespace:LLaser.Common;assembly=LLaser.Common"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             MinHeight="400" MinWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>

            <CollectionViewSource x:Key="signalModels" Source="{Binding Models}"/>
            <CollectionViewSource x:Key="levels" Source="{Binding ElectricalLevels}"/>
            <CollectionViewSource x:Key="currentOnSignals" Source="{Binding /Model.OnSignals, Source={StaticResource signalModels}}" />
            <CollectionViewSource x:Key="currentOffSignals" Source="{Binding /Model.OffSignals, Source={StaticResource signalModels}}" />

            <converter:SignalsConverter x:Key="signalConverter"/>
            <converter:ElectricalLevelConverter x:Key="electricalLevelConverter"/>
            <converter:SignalLevelConverter x:Key="signalLevelConverter"/>

            <ControlTemplate x:Key="tmpStepLineChartNoLegend" TargetType="controls:StepLineSeries">
                <Canvas x:Name="PlotArea" Background="{TemplateBinding AraeBackground}">
                    <Polyline x:Name="polyline"
                              Points="{TemplateBinding Points}"
                              Stroke="{TemplateBinding Stroke}"
                              StrokeThickness="{TemplateBinding StrokeThickness}"
                              Style="{TemplateBinding PolylineStyle}" />
                </Canvas>
            </ControlTemplate>


            <!-- Chart template to show signal lines -->
            <ControlTemplate x:Key="tmpChartNoLegend" TargetType="chart:Chart">
                <ControlTemplate.Resources>
                    <Style x:Key="powerTypeLabelStyle0" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="0">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="powerTypeLabelStyle1" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="1">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="powerTypeLabelStyle2" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="2">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="powerTypeLabelStyle3" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="3">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="powerTypeLabelStyle4" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="4">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="powerTypeLabelStyle5" TargetType="TextBlock">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding /Id, Source={StaticResource signalModels}}" Value="5">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Settings[APP_TEXT_HIGHLIGHT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ControlTemplate.Resources>
                <Grid Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" MinWidth="50" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid Margin="0,0,0,35" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="1" Text="{Binding [lblPowerVSHD], Source={StaticResource lang}, Mode=OneWay}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource powerTypeLabelStyle0}"
                                   FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="0" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle0}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="1" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle0}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <TextBlock Grid.Row="3" Text="{Binding [lblPowerVSHA], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle1}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="2" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle1}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="3" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle1}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <TextBlock Grid.Row="5" Text="{Binding [lblPowerVLED], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle2}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="4" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle2}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="5" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle2}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <TextBlock Grid.Row="7" Text="{Binding [lblPowerAC0], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle3}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="6" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle3}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="7" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle3}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <TextBlock Grid.Row="9" Text="{Binding [lblPowerAC1], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle4}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="8" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle4}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="9" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle4}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <TextBlock Grid.Row="11" Text="{Binding [lblPowerRGB], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle5}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}"/>
                        <TextBlock Grid.Row="10" Grid.RowSpan="2" Text="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle5}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />
                        <TextBlock Grid.Row="11" Grid.RowSpan="2" Text="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}" Style="{StaticResource powerTypeLabelStyle5}"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}" />

                        <!-- overlay listbox on chart Y axis, to accept user click event -->
                        <ListBox Grid.RowSpan="12" ItemsSource="{Binding Source={StaticResource signalModels}}"
                                 Background="Transparent" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                 BorderThickness="0">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="1"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Grid Background="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Background="Transparent"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </Grid>

                    <chartingprimitives:EdgePanel x:Name="ChartArea" Grid.Column="1"
                                                  Style="{TemplateBinding ChartAreaStyle}" Margin="5,0,0,0">
                        <Grid Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}"
                              Background="{TemplateBinding Background}" />
                    </chartingprimitives:EdgePanel>
                </Grid>
            </ControlTemplate>

            <Style x:Key="styLineDataPoint" TargetType="chart:LineDataPoint">
                <Setter Property="Opacity" Value="0" />
            </Style>

            <!-- style of StepLineSeries -->
            <Style x:Key="styStepLineSeries" TargetType="controls:StepLineSeries">
                <Setter Property="Background" Value="Black" />
                <Setter Property="StrokeThickness" Value="1" />
                <Setter Property="JumpFirst" Value="False" />
                <Setter Property="Template" Value="{StaticResource tmpStepLineChartNoLegend}" />
                <Setter Property="IndependentAxis">
                    <Setter.Value>
                        <chart:LinearAxis Orientation="X" ShowGridLines="True" Minimum="0" MaxHeight="35" 
                                          Title="{Binding [lblPowerTime], Source={StaticResource lang}, Mode=OneWay}"
                                          FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}">
                            <chart:LinearAxis.Foreground>
                                <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </chart:LinearAxis.Foreground>
                            <chart:LinearAxis.GridLineStyle>
                                <Style TargetType="Line">
                                    <Setter Property="Stroke">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{Binding Settings[APP_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="StrokeThickness" Value="1" />
                                </Style>
                            </chart:LinearAxis.GridLineStyle>
                        </chart:LinearAxis>
                    </Setter.Value>
                </Setter>
                <Setter Property="DependentRangeAxis">
                    <Setter.Value>
                        <chart:LinearAxis Orientation="Y" Minimum="0" Maximum="650" Interval="25" Opacity="0" Width="0" />
                    </Setter.Value>
                </Setter>
                <Setter Property="DataPointStyle" Value="{StaticResource styLineDataPoint}" />
            </Style>

            <Style TargetType="xctk:CalculatorUpDown">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                        <Setter Property="l:ValidationEx.ErrorMessage"
                                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="rowHeaderTemplate">
                <Grid>
                    <Image x:Name="editImage" Source="pack://application:,,,/LLaser;component/Image/edit.png" Width="16" Height="16" Margin="1" Visibility="Hidden"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}}" Value="True">
                        <Setter TargetName="editImage" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            
            <Style x:Key="signalDataGridBaseStyle" TargetType="{x:Type DataGrid}">
                <Setter Property="GridLinesVisibility" Value="All"/>
                <Setter Property="HorizontalGridLinesBrush" Value="#FFCDEFFE"/>
                <Setter Property="VerticalGridLinesBrush" Value="#FFCDEFFE"/>
                <Setter Property="RowHeaderTemplate" Value="{StaticResource rowHeaderTemplate}"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260" MinWidth="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- setting panel -->
        <Grid Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <GroupBox Header="{Binding [lblPowerTimingSetting], Source={StaticResource lang}, Mode=OneWay}">
                <Grid Margin="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Power status radiobuttons -->
                    <UniformGrid Columns="2" Grid.ColumnSpan="2">
                        <RadioButton Content="{Binding [lblPowerOn], Source={StaticResource lang}, Mode=OneWay}" Margin="4" 
                                     IsChecked="{Binding IsPowerOn, Mode=TwoWay}"/>
                        <RadioButton Content="{Binding [lblPowerOff], Source={StaticResource lang}, Mode=OneWay}" Margin="4" 
                                     IsChecked="{Binding IsPowerOn, Mode=TwoWay, Converter={StaticResource booleanNegationConverter}}"/>
                    </UniformGrid>

                    <TextBlock Grid.Row="1" Text="{Binding [lblPowerType], Source={StaticResource lang}, Mode=OneWay}" Margin="4" VerticalAlignment="Center" />

                    <!-- Type ComboBox -->
                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="4" 
                              ItemsSource="{Binding Source={StaticResource signalModels}}"
                              DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True"/>

                    <DataGrid x:Name="dgPowerTiming" Grid.Row="2" Grid.ColumnSpan="2" AutoGenerateColumns="False" 
                              CanUserSortColumns="False" CanUserResizeColumns="False"
                              CanUserReorderColumns="False" CanUserResizeRows="False" CanUserAddRows="True" CanUserDeleteRows="True"
                              BeginningEdit="DgPowerTiming_OnBeginningEdit">
                        <DataGrid.Style>
                            <Style TargetType="DataGrid" BasedOn="{StaticResource signalDataGridBaseStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPowerOn, Mode=TwoWay}" Value="true">
                                        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource currentOnSignals}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPowerOn, Mode=TwoWay}" Value="false">
                                        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource currentOffSignals}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>
                        <DataGrid.ItemContainerStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </DataGrid.ItemContainerStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="{Binding [lblPowerTime], Source={StaticResource lang}, Mode=OneWay}" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Time}" Margin="2" HorizontalAlignment="Right"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <xctk:CalculatorUpDown Text="{Binding Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="999999"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridComboBoxColumn Header="{Binding [lblPowerLevel], Source={StaticResource lang}, Mode=OneWay}" Width="*" 
                                                    ItemsSource="{Binding Source={StaticResource levels}, UpdateSourceTrigger=PropertyChanged}"
                                                    DisplayMemberPath="Display" SelectedValuePath="Level"
                                                    SelectedValueBinding="{Binding ElectricalLevel, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>


                    <!-- Parameter setting panel -->
                    <GroupBox Grid.Row="4" Grid.ColumnSpan="2" Margin="2" HorizontalAlignment="Stretch">
                        <GroupBox.Header>
                            <!-- DataGrid Add/Delete buttons -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.ColumnSpan="2" Grid.Row="3" Margin="2">
                                <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="2"
                                        Command="{Binding AddDataCommand}"
                                        CommandParameter="{Binding /Model, Source={StaticResource signalModels}}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/LLaser;component/Image/add.png" Margin="2" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding [btnAdd], Source={StaticResource lang}, Mode=OneWay}" Margin="2" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{Binding [lblPowerTimeSetting], Source={StaticResource lang}, Mode=OneWay}" Margin="4" VerticalAlignment="Center"/>
                            <xctk:CalculatorUpDown Grid.Column="1" Minimum="0" Maximum="999999" Margin="4"
                                                   Text="{Binding NewSignal.Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Grid.Column="2" Text="{Binding [lblPowerTimeUnitSetting], Source={StaticResource lang}, Mode=OneWay}" Margin="4" VerticalAlignment="Center"/>

                            <TextBlock Margin="4" VerticalAlignment="Center" Grid.Row="1">
                                <TextBlock.Inlines>
                                    <Run Text="{Binding [lblPowerLevel], Source={StaticResource lang}, Mode=OneWay}"/>
                                    <Run Text=":"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <UniformGrid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Columns="2">
                                <RadioButton Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding [lblPowerLevelH], Source={StaticResource lang}, Mode=OneWay}"
                                             IsChecked="{Binding NewSignal.ElectricalLevel, Converter={StaticResource electricalLevelConverter}}"/>
                                <RadioButton Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding [lblPowerLevelL], Source={StaticResource lang}, Mode=OneWay}"
                                             IsChecked="{Binding NewSignal.ElectricalLevel, Converter={StaticResource electricalLevelConverter}, ConverterParameter=N}"/>
                            </UniformGrid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>

            <UniformGrid Columns="2" Grid.Row="1">
                <Button Margin="4" Padding="2" Command="{Binding ImportCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/LLaser;component/Image/import.png" Margin="2" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding [lblPowerImport], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,2,2"/>
                    </StackPanel>
                </Button>
                <Button Margin="4" Padding="2" Command="{Binding ExportCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/LLaser;component/Image/export.png" Margin="2" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding [lblPowerExport], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,2,2"/>
                    </StackPanel>
                </Button>
            </UniformGrid>
        </Grid>

        <!-- chart -->
        <Border Grid.Column="1" Background="Black" BorderBrush="Black" BorderThickness="1" CornerRadius="3" Margin="4"
                UseLayoutRounding="True" SnapsToDevicePixels="True">

            <controls:ImagePreview UseLayoutRounding="True" SnapsToDevicePixels="True"
                                   SaveButtonName="{Binding [btnSaveImg], Source={StaticResource lang}, Mode=OneWay}"
                                   FullButtonName="{Binding [btnFullScreen], Source={StaticResource lang}, Mode=OneWay}">

                <controls:ImagePreview.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding [menuCopyImg], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding CopyImageCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/image_copy.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Binding [menuSaveImg], Source={StaticResource lang}, Mode=OneWay}"
                                  InputGestureText="{Binding [menuSaveImgGesture], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding SaveImageCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/image_save.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Binding [menuFullScreen], Source={StaticResource lang}, Mode=OneWay}"
                                  InputGestureText="{Binding [menuFullScreenGesture], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding FullScreenCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/fullscreen.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </controls:ImagePreview.ContextMenu>

                <chart:Chart Background="Black" Margin="10,10,10,20"
                             Template="{StaticResource tmpChartNoLegend}">

                    <chart:Chart.Series>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=0}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[5].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[5].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=1}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[4].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[4].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=2}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[3].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[3].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=3}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[2].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[2].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=4}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[1].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[1].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                        <controls:StepLineSeries DependentValueBinding="{Binding ElectricalLevel, Converter={StaticResource signalLevelConverter}, ConverterParameter=5}"
                                                 IndependentValuePath="Time">
                            <controls:StepLineSeries.Stroke>
                                <SolidColorBrush Color="{Binding Settings[APP_SIGNAL_LINE_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                            </controls:StepLineSeries.Stroke>
                            <controls:StepLineSeries.Style>
                                <Style TargetType="controls:StepLineSeries" BasedOn="{StaticResource styStepLineSeries}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding Models[0].Model.OnSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPowerOn}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Models[0].Model.OffSignals, Mode=OneWay, Converter={StaticResource signalConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StepLineSeries.Style>
                        </controls:StepLineSeries>
                    </chart:Chart.Series>
                </chart:Chart>
            </controls:ImagePreview>
        </Border>
    </Grid>
</UserControl>