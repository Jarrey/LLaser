<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vs="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:local="clr-namespace:LLaser.WPF.Controls">

    <Style TargetType="{x:Type local:ImagePreview}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImagePreview}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter />

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowButtonsInLeft, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ImagePreview}}" Value="true">
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <UniformGrid Rows="1" Background="Transparent">
                                    <local:MetroIconButton x:Name="btnSave" Content="{TemplateBinding SaveButtonName}"
                                                           Icon="pack://application:,,,/LLaser.WPF.Controls;component/Icons/save_icon.png"/>
                                    <local:MetroIconButton x:Name="btnFull" Content="{TemplateBinding FullButtonName}"
                                                           Icon="pack://application:,,,/LLaser.WPF.Controls;component/Icons/fullscreen_icon.png"/>
                                    <Grid Visibility="{TemplateBinding CustomButton1Visibility}">
                                        <local:MetroIconButton x:Name="btnCustom1" Content="{TemplateBinding CustomButton1Name}"
                                                               Icon="{TemplateBinding CustomButton1Icon}"
                                                               Command="{TemplateBinding CustomButton1Command}" CommandParameter="{TemplateBinding CustomButton1CommandParameter}"/>
                                    </Grid>
                                    <Grid Visibility="{TemplateBinding CustomButton2Visibility}">
                                        <local:MetroIconButton x:Name="btnCustom2" Content="{TemplateBinding CustomButton2Name}"
                                                               Icon="{TemplateBinding CustomButton2Icon}"
                                                               Command="{TemplateBinding CustomButton2Command}" CommandParameter="{TemplateBinding CustomButton2CommandParameter}"/>
                                    </Grid>
                                </UniformGrid>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ****************************** -->
    <!-- ** Metro Icon Button Styles ** -->
    <!-- ****************************** -->
    <!-- Image/Text Button Border -->
    <Style TargetType="Border" x:Key="pdsaButtonImageTextBorderStyle">
        <Setter Property="Margin" Value="4" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="50" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <!-- Image/Text Button TextBlock -->
    <Style x:Key="pdsaButtonImageTextStyle">
        <Setter Property="FrameworkElement.Margin" Value="2" />
        <Setter Property="TextElement.Foreground" Value="White" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
        <Setter Property="TextElement.FontSize" Value="9" />
    </Style>
    <Style TargetType="{x:Type local:MetroIconButton}">
        <Setter Property="Opacity" Value=".5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroIconButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" x:Name="borMain"
                                Style="{StaticResource pdsaButtonImageTextBorderStyle}"
                                ToolTip="{TemplateBinding Content}">
                            <Image x:Name="imgIcon"
                                   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                                   Width="20" Height="20" />
                        </Border>
                        <ContentPresenter Grid.Row="1" Style="{StaticResource pdsaButtonImageTextStyle}" />
                        <vs:VisualStateManager.VisualStateGroups>
                            <vs:VisualStateGroup>
                                <vs:VisualState x:Name="MouseEnter">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="borMain"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#555555" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vs:VisualState>
                                <vs:VisualState x:Name="MouseDown">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="borMain"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#555555" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="borMain"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#555555" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vs:VisualState>
                                <vs:VisualState x:Name="MouseUp">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="borMain"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#555555" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vs:VisualState>
                                <vs:VisualState x:Name="MouseLeave" />
                            </vs:VisualStateGroup>
                        </vs:VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>