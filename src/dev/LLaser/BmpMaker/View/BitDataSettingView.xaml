<!--
    //*********************************************************
    // LLaser project - BitDataSettingView.xaml
    // Created at 2013-6-21
    // Author: Bob Bao jar.bob@gmail.com
    //
    // All rights reserved. Please follow license agreement to
    // rewrite and copy this code.
    //
    //*********************************************************
-->
<Window x:Class="LLaser.View.BitDataSettingView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:viewModel="clr-namespace:LLaser.ViewModel"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:LLaser.Common.Command;assembly=LLaser.Common"
        Title="{Binding [BitDataWindowTitle], Source={StaticResource lang}, Mode=OneWay}" Height="300" Width="300"
        Icon="pack://application:,,,/LLaser;component/Image/perference.png" WindowStartupLocation="CenterScreen" SizeToContent="WidthAndHeight" ResizeMode="NoResize"
        UseLayoutRounding="True" SnapsToDevicePixels="True" ShowInTaskbar="False" Topmost="True">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ItemsControl Margin="10" ItemsSource="{Binding Model.YAxisColors}" Width="500" Height="500" 
                      VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="Transparent">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" Background="Transparent"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding XAxisColors}" Background="Transparent"
                                  VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" Background="Transparent"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Button>
                                        <Button.Background>
                                            <SolidColorBrush Color="{Binding BitColor}"/>
                                        </Button.Background>
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Rectangle Fill="{TemplateBinding Background}"/>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <cmd:EventToCommand Command="{Binding LeftClickCommand}"
                                                                    CommandParameter="{Binding DataContext.Model.LColor, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                                <cmd:EventToCommand Command="{Binding RightClickCommand}"
                                                                    CommandParameter="{Binding DataContext.Model.RColor, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <GroupBox Header="Setting" Grid.Column="1" Margin="4,10,10,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" MinWidth="80"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- x-axis count -->
                    <TextBlock Text="{Binding [lblXAxisCount], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4"/>
                    <xctk:IntegerUpDown Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                        Minimum="1" Maximum="16" Increment="1" Value="{Binding Model.XAxisCount}"/>

                    <!-- y-axis count -->
                    <TextBlock Grid.Row="1" Text="{Binding [lblYAxisCount], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                        Minimum="1" Maximum="16" Increment="1" Value="{Binding Model.YAxisCount}"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1" Margin="4,2,4,4" Height="70" Width="80">
                        <xctk:ColorPicker DisplayColorAndName="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                          StandardColorsHeader="{Binding [ColorPickerStandardColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                          AvailableColorsHeader="{Binding [ColorPickerAvailableColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                          ShowStandardColors="True" ShowAvailableColors="True" UsingAlphaChannel="False" ShowAdvancedButton="True"
                                          StandardColors="{Binding ., Mode=OneWay, Source={x:Static viewModel:BmpMakerViewModel.StandardColors}}" 
                                          SelectedColor="{Binding Model.LColor}"/>
                    </Border>

                    <Border Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="1" Margin="4,2,4,4" Height="70" Width="80">
                        <xctk:ColorPicker DisplayColorAndName="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                          StandardColorsHeader="{Binding [ColorPickerStandardColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                          AvailableColorsHeader="{Binding [ColorPickerAvailableColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                          ShowStandardColors="True" ShowAvailableColors="True" UsingAlphaChannel="False" ShowAdvancedButton="True"
                                          StandardColors="{Binding ., Mode=OneWay, Source={x:Static viewModel:BmpMakerViewModel.StandardColors}}" 
                                          SelectedColor="{Binding Model.RColor}"/>
                    </Border>

                    <TextBlock Text="{Binding [lblLClick], Source={StaticResource lang}, Mode=OneWay}" Margin="4,4,4,0"/>
                    <TextBlock Grid.Column="1" Text="{Binding [lblRClick], Source={StaticResource lang}, Mode=OneWay}" Margin="4,4,4,0"/>
                </Grid>

                <!-- Close/Cancel buttons -->
                <UniformGrid Grid.Row="2" VerticalAlignment="Bottom" Columns="2">
                    <Button Content="{Binding [btnWindowClose], Source={StaticResource lang}, Mode=OneWay}" 
                            VerticalAlignment="Center" Margin="4" Click="Close_OnClick"/>
                    <Button Content="{Binding [btnColorSelectWindowDefault], Source={StaticResource lang}, Mode=OneWay}" 
                            Margin="4" VerticalAlignment="Center" Command="{Binding DefaultCommand}"/>
                </UniformGrid>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
