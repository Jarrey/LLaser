<!--
    //*********************************************************
    // LLaser project - BmpMakerView.xaml
    // Created at 2013-5-20
    // Author: Bob Bao jar.bob@gmail.com
    //
    // All rights reserved. Please follow license agreement to
    // rewrite and copy this code.
    //
    //*********************************************************
-->
<UserControl x:Class="LLaser.View.BmpMakerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:LLaser.WPF.Controls;assembly=LLaser.WPF.Controls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:viewModel="clr-namespace:LLaser.ViewModel"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:LLaser.Common.Command;assembly=LLaser.Common"
             xmlns:common="clr-namespace:LLaser.Common;assembly=LLaser.Common"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             SnapsToDevicePixels="True" UseLayoutRounding="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="WindowTypeDrawing.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding Source={x:Static viewModel:MainWindowViewModel.OpenBMPMakerCommand}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Modifiers="Control" Key="O"/>
        <KeyBinding Command="{Binding Source={x:Static viewModel:MainWindowViewModel.SaveBMPMakerCommand}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Modifiers="Control" Key="S"/>
    </UserControl.InputBindings>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="200" Width="330"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Setting panel -->
        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <!-- bmp size setting -->
                <Grid Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding [lblBmpWidth], Source={StaticResource lang}, Mode=OneWay}" Margin="4,0" VerticalAlignment="Center"/>
                    <xctk:CalculatorUpDown Grid.Column="1" Minimum="1" Maximum="9999" Increment="1" Margin="4,0" VerticalAlignment="Center"
                                           Value="{Binding Model.Size.Width, Delay=500}"/>
                    <TextBlock Grid.Column="2" Text="{Binding [lblBmpHeight], Source={StaticResource lang}, Mode=OneWay}" Margin="4,0" VerticalAlignment="Center"/>
                    <xctk:CalculatorUpDown Grid.Column="3" Minimum="1" Maximum="9999" Increment="1" Margin="4,0" VerticalAlignment="Center"
                                           Value="{Binding Model.Size.Height, Delay=500}"/>
                </Grid>

                <!-- color setting panel -->
                <GroupBox Header="{Binding [lblColorSetting], Source={StaticResource lang}, Mode=OneWay}" Margin="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- solid color -->
                        <RadioButton x:Name="rbtnSolidColor" VerticalAlignment="Center" Margin="4,4,4,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
                                     IsChecked="{Binding Model.Color.IsSolidColorEnabled}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding [lblSolidColor], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,4,0"/>
                                <xctk:ColorPicker Grid.Column="1" StandardColors="{Binding ., Mode=OneWay, Source={x:Static viewModel:BmpMakerViewModel.StandardColors}}" 
                                                  IsEnabled="{Binding IsChecked, ElementName=rbtnSolidColor}"
                                                  StandardColorsHeader="{Binding [ColorPickerStandardColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                                  DisplayColorAndName="True"
                                                  ShowStandardColors="True" ShowAvailableColors="False" UsingAlphaChannel="False" ShowAdvancedButton="True"
                                                  VerticalAlignment="Center" Margin="4,0,0,0"
                                                  SelectedColor="{Binding Model.Color.SolidColor.SolidColor}"/>
                            </Grid>
                        </RadioButton>

                        <!-- color bar -->
                        <RadioButton x:Name="rbtnColorBar" VerticalAlignment="Center" Margin="4,4,4,0" Grid.Row="1" HorizontalContentAlignment="Stretch"
                                     IsChecked="{Binding Model.Color.IsColorBarEnabled}">
                            <Grid IsEnabled="{Binding IsChecked, ElementName=rbtnColorBar}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!-- color bar type -->
                                <TextBlock Text="" VerticalAlignment="Center" Margin="0,0,4,0">
                                    <TextBlock.Inlines>
                                        <Run Text="{Binding [lblColorBar], Source={StaticResource lang}, Mode=OneWay}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="4,4,4,0"
                                          ItemsSource="{Binding ColorBarTypes}" DisplayMemberPath="Display" SelectedValuePath="ColorBarType"
                                          SelectedValue="{Binding Model.Color.ColorBar.ColorBarType}"/>
                                <Button Grid.Column="2" IsEnabled="{Binding Model.Color.ColorBar.IsEnableColorSelect}"
                                        VerticalAlignment="Center" Margin="4,4,0,0" Padding="10,2"
                                        Command="{Binding ShowColorSelectCommand}"
                                        CommandParameter="{Binding Model.Color.ColorBar}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/LLaser;component/Image/palette.png" Margin="2" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding [btnColorSelect], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </RadioButton>

                        <!-- pattern -->
                        <RadioButton x:Name="rbtnPattern"  VerticalAlignment="Center" Margin="4,4,4,0" Grid.Row="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                                     IsChecked="{Binding Model.Color.IsPatternEnabled}">
                            <Grid IsEnabled="{Binding IsChecked, ElementName=rbtnPattern}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding [lblPattern], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="0,4,4,4"/>
                                <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="4,4,0,0"
                                          ItemsSource="{Binding PatternTypes}" DisplayMemberPath="Display" SelectedValuePath="Type"
                                          SelectedValue="{Binding Model.Color.Pattern.PatternType}"/>
                            </Grid>
                        </RadioButton>

                        <!-- custom -->
                        <RadioButton x:Name="rbtnCustom"  VerticalAlignment="Center" Margin="4,4,4,0" Grid.Row="3" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                                     IsChecked="{Binding Model.Color.IsBitDataEnabled}">
                            <Grid IsEnabled="{Binding IsChecked, ElementName=rbtnCustom}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding [lblCustomFill], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="0,4,4,4"/>
                                <Button Grid.Column="1" VerticalAlignment="Center" Margin="4,4,0,4" Padding="10,2"
                                        Command="{Binding ShowBitdataSettingCommand}"
                                        CommandParameter="{Binding Model.Color.BitData}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/LLaser;component/Image/setting.png" Margin="2" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding [btnCustomFillSetting], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </RadioButton>
                    </Grid>
                </GroupBox>

                <!-- gradation setting panel -->
                <GroupBox Margin="4">
                    <GroupBox.Header>
                        <CheckBox x:Name="chkGradationSetting" Content="{Binding [lblGradationSetting], Source={StaticResource lang}, Mode=OneWay}"
                                  IsChecked="{Binding Model.Gradation.IsGradationEnabled}"/>
                    </GroupBox.Header>

                    <Grid IsEnabled="{Binding IsChecked, ElementName=chkGradationSetting}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- start and end value setting -->
                        <Grid Grid.ColumnSpan="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding [lblGradationStart], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="255" Increment="1"
                                                   Value="{Binding Model.Gradation.Start, Delay=500}"/>
                            <Button Grid.Column="2" VerticalAlignment="Center" Margin="4,0" Background="Transparent" BorderBrush="Transparent"
                                    Command="{Binding Model.Gradation.SwapStartEndCommand}">
                                <Image Source="pack://application:,,,/LLaser;component/Image/swap.png"/>
                            </Button>
                            <TextBlock Grid.Column="3" Text="{Binding [lblGradationEnd], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Column="4" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="255" Increment="1"
                                                   Value="{Binding Model.Gradation.End, Delay=500}"/>
                        </Grid>

                        <!-- step type -->
                        <RadioButton Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding [lblGradationGrayStep], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,4,2"
                                     IsChecked="{Binding Model.Gradation.IsGrayStep}"/>
                        <RadioButton Grid.Row="2" Grid.ColumnSpan="2" Content="{Binding [lblGradationSGrayStep], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,4,2"
                                     IsChecked="{Binding Model.Gradation.IsSGrayStep}"/>

                        <!-- step -->
                        <Grid Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding [lblGradationStep], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,4,2"/>
                            <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="4,2,4,2"
                                      ItemsSource="{Binding GradationSteps}" DisplayMemberPath="Step" SelectedValuePath="Step"
                                      SelectedValue="{Binding Model.Gradation.Step}"/>
                        </Grid>

                        <!-- direction -->
                        <Grid Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding [lblGradationDirection], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,2,4,2"/>
                            <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="4,2,4,2"
                                      ItemsSource="{Binding GradationDirections}" SelectedValuePath="Direction" DisplayMemberPath="Display"
                                      SelectedValue="{Binding Model.Gradation.Direction}"/>
                        </Grid>
                    </Grid>
                </GroupBox>

                <!-- Window -->
                <GroupBox Margin="4">
                    <GroupBox.Header>
                        <CheckBox x:Name="chkWindowSetting" Content="{Binding [lblWindowSetting], Source={StaticResource lang}, Mode=OneWay}"
                                  IsChecked="{Binding Model.Window.IsWindowEnabled}"/>
                    </GroupBox.Header>
                    <Grid IsEnabled="{Binding IsChecked, ElementName=chkWindowSetting}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding [lblWindowType], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,4,4,0"/>
                        <ComboBox x:Name="comWindowType" Grid.Column="1" VerticalAlignment="Center" Margin="4,4,4,0" ItemsSource="{Binding WindowTypes}"
                                  DisplayMemberPath="Display" SelectedValuePath="WindowType"
                                  SelectedValue="{Binding Model.Window.WindowType}"/>

                        <TextBlock Text="{Binding [lblWindowBackground], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="1" VerticalAlignment="Center" Margin="4,4,4,0"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="4,4,4,0" ItemsSource="{Binding WindowBackgroundTypes}"
                                  DisplayMemberPath="Display" SelectedValuePath="WindowBackgroundType"
                                  SelectedValue="{Binding Model.Window.WindowBackgroundType}"/>

                        <TextBlock Text="{Binding [lblWindowColor], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="2" VerticalAlignment="Center" Margin="4,4,4,0"/>
                        <xctk:ColorPicker Grid.Row="2" Grid.Column="1"  StandardColors="{Binding ., Mode=OneWay, Source={x:Static viewModel:BmpMakerViewModel.StandardColors}}" 
                                          StandardColorsHeader="{Binding [ColorPickerStandardColorsButtonName], Source={StaticResource lang}, Mode=OneWay}"
                                          DisplayColorAndName="True" VerticalAlignment="Center" Margin="4,4,4,0"
                                          ShowStandardColors="True" ShowAvailableColors="False" UsingAlphaChannel="False" ShowAdvancedButton="True"
                                          SelectedColor="{Binding Model.Window.WindowColor}"/>

                        <TextBlock Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="4,4,4,0">
                            <TextBlock.Inlines>
                                <Run Text="{Binding [lblWindowGrayStep], Source={StaticResource lang}, Mode=OneWay}"/>
                                <Run Text="{Binding Model.Window.GrayStep, Mode=OneWay}"/>
                            </TextBlock.Inlines>
                        </TextBlock>
                        <Slider Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="4,0,4,4" Minimum="0" Maximum="255"
                                Value="{Binding Model.Window.GrayStep}"/>

                        <Grid Grid.Column="2" Grid.RowSpan="5" Margin="4" Background="LightGray">
                            <Rectangle>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Single">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeSingle}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Cross">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeCross}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Matrix">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeMatrix}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Window2">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeWindow2}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Frame">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeFrame}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedItem.WindowType, ElementName=comWindowType, Mode=OneWay}" 
                                                         Value="Checker">
                                                <Setter Property="Fill" Value="{StaticResource dwWindowTypeChecker}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>

                        <Grid Grid.ColumnSpan="3" Grid.Row="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding [lblWindowX1], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="{Binding Model.Bitmap.PixelWidth, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.X1, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsPoint1Enabled}"/>
                            <TextBlock Text="{Binding [lblWindowHLength], Source={StaticResource lang}, Mode=OneWay}" Grid.Column="2" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Column="3" VerticalAlignment="Center" Margin="4"
                                                   Minimum="1" Maximum="{Binding Model.Bitmap.PixelWidth, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.HLength, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsLengthEnabled}"/>
                            <TextBlock Text="{Binding [lblWindowY1], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="1" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="{Binding Model.Bitmap.PixelHeight, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.Y1, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsPoint1Enabled}"/>
                            <TextBlock Text="{Binding [lblWindowVLength], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Margin="4"
                                                   Minimum="1" Maximum="{Binding Model.Bitmap.PixelHeight, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.VLength, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsLengthEnabled}"/>
                            <TextBlock Text="{Binding [lblWindowX2], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="2" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                                   Minimum="{Binding Model.Window.X1, Mode=OneWay}" Maximum="{Binding Model.Bitmap.PixelWidth, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.X2, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsPoint2Enabled}"/>
                            <TextBlock Text="{Binding [lblWindowHSpace], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="{Binding Model.Bitmap.PixelWidth, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.HSpace, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsSpaceEnabled}"/>
                            <TextBlock Text="{Binding [lblWindowY2], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="3" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="4"
                                                   Minimum="{Binding Model.Window.Y1, Mode=OneWay}" Maximum="{Binding Model.Bitmap.PixelHeight, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.Y2, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsPoint2Enabled}"/>
                            <TextBlock Text="{Binding [lblWindowVSpace], Source={StaticResource lang}, Mode=OneWay}" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" Margin="4"/>
                            <xctk:CalculatorUpDown Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" Margin="4"
                                                   Minimum="0" Maximum="{Binding Model.Bitmap.PixelHeight, Mode=OneWay}" Increment="1"
                                                   Value="{Binding Model.Window.VSpace, Delay=500}"
                                                   IsEnabled="{Binding Model.Window.IsSpaceEnabled}"/>
                        </Grid>
                    </Grid>
                </GroupBox>

                <!-- import bmp -->
                <GroupBox Margin="4">
                    <GroupBox.Header>
                        <CheckBox x:Name="chkImport" Content="{Binding [lblImportBMP], Source={StaticResource lang}, Mode=OneWay}"
                                  IsChecked="{Binding Model.ImportBmp.IsImportBmpEnabled}"/>
                    </GroupBox.Header>
                    <Grid IsEnabled="{Binding IsChecked, ElementName=chkImport}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock TextWrapping="Wrap" Text="{Binding Model.ImportBmp.FilePath, Mode=OneWay}" Margin="4"
                                   ToolTip="{Binding Model.ImportBmp.FilePath, Mode=OneWay}"/>
                        <Button Grid.Column="1" VerticalAlignment="Top" Margin="4" Padding="10,2" HorizontalAlignment="Right"
                                Command="{Binding ImportBMPCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="pack://application:,,,/LLaser;component/Image/open_file.png" Margin="2" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding [btnImportBMPOpen], Source={StaticResource lang}, Mode=OneWay}" VerticalAlignment="Center" Margin="4,0,0,0"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>

        <!-- BMP Preview -->
        <Border Grid.Column="1" Background="#FF333333" BorderBrush="Black" BorderThickness="1" CornerRadius="3" Margin="4"
                UseLayoutRounding="True" SnapsToDevicePixels="True">
            <controls:ImagePreview UseLayoutRounding="True" SnapsToDevicePixels="True" ShowButtonsInLeft="True"
                                   SaveButtonName="{Binding [btnSaveImg], Source={StaticResource lang}, Mode=OneWay}"
                                   FullButtonName="{Binding [btnFullScreen], Source={StaticResource lang}, Mode=OneWay}"
                                   ContentType="BitmapSource" Bitmap="{Binding Model.Bitmap, Mode=OneWay}"
                                   Background="Transparent"
                                   CustomButton1Visibility="Visible" CustomButton1Name="{Binding [btnZoomIn], Source={StaticResource lang}, Mode=OneWay}"
                                   CustomButton1Icon="pack://application:,,,/LLaser.WPF.Controls;component/Icons/zoomIn.png" CustomButton1Command="{Binding ZoomInCommand}"
                                   CustomButton1CommandParameter="{Binding .,ElementName=ctlZoomBox}"
                                   CustomButton2Visibility="Visible" CustomButton2Name="{Binding [btnZoomOut], Source={StaticResource lang}, Mode=OneWay}"
                                   CustomButton2Icon="pack://application:,,,/LLaser.WPF.Controls;component/Icons/zoomOut.png" CustomButton2Command="{Binding ZoomOutCommand}"
                                   CustomButton2CommandParameter="{Binding .,ElementName=ctlZoomBox}">
                <controls:ImagePreview.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding [menuCopyImg], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding CopyImageCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/image_copy.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Binding [menuSaveImg], Source={StaticResource lang}, Mode=OneWay}"
                                  InputGestureText="{Binding [menuSaveImgGesture], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding SaveImageCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/image_save.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Binding [menuFullScreen], Source={StaticResource lang}, Mode=OneWay}"
                                  InputGestureText="{Binding [menuFullScreenGesture], Source={StaticResource lang}, Mode=OneWay}"
                                  Command="{Binding FullScreenCommand}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/LLaser;component/Image/fullscreen.png" Height="16" Width="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </controls:ImagePreview.ContextMenu>
                <controls:ImagePreview.Content>
                    <Grid>
                        <xctk:Zoombox x:Name="ctlZoomBox" Background="Transparent" KeepContentInBounds="True" ViewFinderVisibility="Visible" ZoomOnPreview="True"
                                      Position="15,15">
                            <Image x:Name="imgBitmap" Source="{Binding Model.Bitmap, Mode=OneWay}" Stretch="None">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="15" Opacity=".5" ShadowDepth="15"/>
                                </Image.Effect>
                                <Image.CacheMode>
                                    <BitmapCache/>
                                </Image.CacheMode>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                        <cmd:EventToCommand Command="{Binding MouseMoveOnImageCommand}" PassEventArgsToCommand="True"
                                                            CommandParameter="{Binding ., ElementName=imgBitmap}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                        </xctk:Zoombox>
                        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="4"
                                    TextElement.FontSize="{Binding Settings[APP_TEXT_SIZE], Source={x:Static common:AppSettings.Instance}}">
                            <TextBlock Margin="2" HorizontalAlignment="Right">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                </TextBlock.Foreground>
                                <TextBlock.Inlines>
                                    <Run Text="[X:"/>
                                    <Run Text="{Binding Position.X, Mode=OneWay, StringFormat={}{0:N0}}"/>
                                    <Run Text=" Y:"/>
                                    <Run Text="{Binding Position.Y, Mode=OneWay, StringFormat={}{0:N0}}"/>
                                    <Run Text="]"/>
                                    <Run Text="[R:"/>
                                    <Run Text="{Binding PointColor.R, Mode=OneWay}"/>
                                    <Run Text=" G:"/>
                                    <Run Text="{Binding PointColor.G, Mode=OneWay}"/>
                                    <Run Text=" B:"/>
                                    <Run Text="{Binding PointColor.B, Mode=OneWay}"/>
                                    <Run Text="]"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <TextBlock Margin="2">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Settings[APP_TEXT_COLOR], Source={x:Static common:AppSettings.Instance}}"/>
                                </TextBlock.Foreground>
                                <TextBlock.Inlines>
                                    <Run Text="{Binding [lblBmpWidth], Source={StaticResource lang}, Mode=OneWay}"/>
                                    <Run Text="{Binding Model.Size.Width, Mode=OneWay}"/>
                                    <Run Text=" "/>
                                    <Run Text="{Binding [lblBmpHeight], Source={StaticResource lang}, Mode=OneWay}"/>
                                    <Run Text="{Binding Model.Size.Height, Mode=OneWay}"/>
                                    <Run Text=" "/>
                                    <Run Text="{Binding [lblZoomScale], Source={StaticResource lang}, Mode=OneWay}"/>
                                    <Run Text="{Binding Scale, ElementName=ctlZoomBox, Mode=OneWay, StringFormat={}{0:0.00%}}"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                        </StackPanel>
                        <xctk:BusyIndicator Visibility="Visible" IsBusy="{Binding Model.IsBusy, Mode=OneWay}" 
                                            BusyContent="{Binding [lblGeneratingBmpBusy], Source={StaticResource lang}, Mode=OneWay}"/>
                    </Grid>
                </controls:ImagePreview.Content>
            </controls:ImagePreview>
        </Border>
    </Grid>
</UserControl>
